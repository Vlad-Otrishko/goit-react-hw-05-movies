{"version":3,"sources":["components/CastSubview/CastSubview.module.css","components/CastSubview/CastSubview.js"],"names":["module","exports","searchApi","ApiService","CastSubview","movieId","useParams","useState","actors","setActors","queryString","useEffect","reset","searchType","request","searchMovies","then","result","cast","className","s","actorList","map","actor","actorData","character","name","actorPhoto","src","profile_path","alt","onError","event","target","DefaultPoster","popularity","id"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,UAAY,+BAA+B,UAAY,+BAA+B,WAAa,gCAAgC,KAAO,4B,iJCIjMC,EAAY,IAAIC,IAoCPC,EAlCK,WAClB,IAAOC,EAAWC,cAAXD,QACP,EAA4BE,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAcL,EAAU,WAW9B,OATAM,qBAAU,WACRT,EAAUU,QACVV,EAAUW,WAAa,EACvBX,EAAUY,QAAUJ,EACpBR,EAAUa,eAAeC,MAAK,SAAAC,GAC5BR,EAAUQ,EAAOC,WAElB,CAACR,IAGFF,GACM,oBAAIW,UAAWC,IAAEC,UAAjB,SACDb,EAAOc,KAAI,SAAAC,GAAK,OACb,qBAAIJ,UAAWC,IAAEI,UAAjB,UACA,oBAAIL,UAAWC,IAAEK,UAAjB,SAA6BF,EAAME,YACnC,oBAAIN,UAAWC,IAAEM,KAAjB,SAAwBH,EAAMG,OAC9B,qBAAKP,UAAWC,IAAEO,WAChBC,IAAG,0CAAqCL,EAAMM,cAC9CC,IAAKP,EAAMG,KACXK,QAAS,SAAAC,GAAK,OAAKA,EAAMC,OAAOL,IAAMM,OAExC,4CAAeX,EAAMY,WAArB,SARiCZ,EAAMa","file":"static/js/Cast.1019eb32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"actorList\":\"CastSubview_actorList__1y128\",\"actorData\":\"CastSubview_actorData__2GaG1\",\"character\":\"CastSubview_character__2dzrW\",\"actorPhoto\":\"CastSubview_actorPhoto__2r9i4\",\"name\":\"CastSubview_name__4WvXD\"};","import { useParams} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport ApiService from '../../services/API';\r\nimport DefaultPoster from '../../images/default_poster.jpg';\r\nimport s from './CastSubview.module.css';\r\nconst searchApi = new ApiService();\r\n\r\nconst CastSubview = () => {\r\n  const {movieId} = useParams();\r\n  const [actors, setActors] = useState([]);\r\n  const queryString = movieId + '/credits';\r\n\r\n  useEffect(() => {\r\n    searchApi.reset();\r\n    searchApi.searchType = 2;\r\n    searchApi.request = queryString;\r\n    searchApi.searchMovies().then(result => {\r\n      setActors(result.cast);\r\n    });\r\n  }, [queryString]);\r\n\r\n  return (\r\n    actors && (\r\n          <ul className={s.actorList}>\r\n        {actors.map(actor => (\r\n            <li className={s.actorData} key={actor.id}>\r\n            <h3 className={s.character}>{actor.character}</h3>\r\n            <h3 className={s.name}>{actor.name}</h3>\r\n            <img className={s.actorPhoto}\r\n              src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\r\n              alt={actor.name}\r\n              onError={event => (event.target.src = DefaultPoster)}\r\n            />\r\n            <p>Popularity:{actor.popularity} </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nexport default CastSubview;\r\n"],"sourceRoot":""}