{"version":3,"sources":["components/Rejected/Rejected.module.css","components/Rejected/Rejected.js","components/ReviewsSubview/ReviewsSubview.module.css","components/ReviewsSubview/ReviewsSubview.js"],"names":["module","exports","Rejected","message","className","s","rejected","searchApi","ApiService","ReviewsSubview","movieId","useParams","useState","reviews","setReviews","queryString","useEffect","reset","searchType","request","searchMovies","then","result","results","length","reviewsList","map","review","reviewData","author","rating","author_details","avatar","src","avatar_path","alt","onError","event","target","DefaultPoster","content","createdDate","created_at","updatedDate","updated_at","reviewPage","href","url","id"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,yB,mGCOhDC,EALE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEhB,OAAQ,oBAAIC,UAAWC,IAAEC,SAAjB,SAA4BH,M,mBCJxCH,EAAOC,QAAU,CAAC,OAAS,+BAA+B,OAAS,iC,yJCK7DM,EAAY,IAAIC,IA4CPC,EA1CQ,WACrB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAcL,EAAU,WAW9B,OATAM,qBAAU,WACRT,EAAUU,QACVV,EAAUW,WAAa,EACvBX,EAAUY,QAAUJ,EACpBR,EAAUa,eAAeC,MAAK,SAAAC,GAC5BR,EAAWQ,EAAOC,cAEnB,CAACR,IAGFF,EAAQW,OAAO,EACb,oBAAIpB,UAAWC,IAAEoB,YAAjB,SACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,qBAAIvB,UAAWC,IAAEuB,WAAjB,UACE,oBAAIxB,UAAWC,IAAEwB,OAAjB,SAA0BF,EAAOE,SACjC,oBAAGzB,UAAWC,IAAEyB,OAAhB,8BACoBH,EAAOI,eAAeD,UAE1C,qBACE1B,UAAWC,IAAE2B,OACbC,IAAG,0CAAqCN,EAAOI,eAAeG,aAC9DC,IAAKtB,EAAQgB,OACbO,QAAS,SAAAC,GAAK,OAAKA,EAAMC,OAAOL,IAAMM,OAExC,oBAAGnC,UAAWC,IAAEmC,QAAhB,UAA0Bb,EAAOa,QAAjC,OACA,mBAAGpC,UAAWC,IAAEoC,YAAhB,SAA8Bd,EAAOe,aACrC,mBAAGtC,UAAWC,IAAEsC,YAAhB,SAA8BhB,EAAOiB,aACrC,mBAAGxC,UAAWC,IAAEwC,WAAYC,KAAMnB,EAAOoB,IAAzC,SACGpB,EAAOoB,QAfsBpB,EAAOqB,SAoB7C,cAAC9C,EAAA,EAAD,CAAUC,QAAQ","file":"static/js/Reviews.80efa598.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rejected\":\"Rejected_rejected__2TTfP\",\"blur\":\"Rejected_blur__28prU\"};","import React from 'react';\r\nimport s from './Rejected.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst Rejected = ({ message }) => {\r\n\r\n    return (<h1 className={s.rejected}>{message}</h1>\r\n    );\r\n}\r\nexport default Rejected;\r\n\r\nRejected.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ReviewsSubview_avatar__3lYlN\",\"author\":\"ReviewsSubview_author__17jIR\"};","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport ApiService from '../../services/API';\r\nimport DefaultPoster from '../../images/default_poster.jpg';\r\nimport s from './ReviewsSubview.module.css';\r\nimport Rejected from '../Rejected';\r\nconst searchApi = new ApiService();\r\n\r\nconst ReviewsSubview = () => {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n  const queryString = movieId + '/reviews';\r\n\r\n  useEffect(() => {\r\n    searchApi.reset();\r\n    searchApi.searchType = 2;\r\n    searchApi.request = queryString;\r\n    searchApi.searchMovies().then(result => {\r\n      setReviews(result.results);\r\n    });\r\n  }, [queryString]);\r\n\r\n  return (\r\n    reviews.length>0 ? (\r\n      <ul className={s.reviewsList}>\r\n        {reviews.map(review => (\r\n          <li className={s.reviewData} key={review.id}>\r\n            <h3 className={s.author}>{review.author}</h3>\r\n            <p className={s.rating}>\r\n              Author's rating: {review.author_details.rating}\r\n            </p>\r\n            <img\r\n              className={s.avatar}\r\n              src={`https://image.tmdb.org/t/p/w500/${review.author_details.avatar_path}`}\r\n              alt={reviews.author}\r\n              onError={event => (event.target.src = DefaultPoster)}\r\n            />\r\n            <p className={s.content}>{review.content} </p>\r\n            <p className={s.createdDate}>{review.created_at}</p>\r\n            <p className={s.updatedDate}>{review.updated_at}</p>\r\n            <a className={s.reviewPage} href={review.url}>\r\n              {review.url}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    ):<Rejected message='Sorry, but no reviews are available'/>\r\n  );\r\n};\r\n\r\nexport default ReviewsSubview;\r\n"],"sourceRoot":""}